// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int               @id @default(autoincrement())
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  email             String            @unique
  firstName         String
  lastName          String
  dateOfBirth       DateTime
  gender            String
  bio               String            @db.Text
  image             String
  maritalStatus     MaritalStatus     @relation(fields: [maritalStatusId], references: [id])
  maritalStatusId   Int
  password          String
  diversity         Diversity?
  additionalDetail AdditionalDetail?
  userPreferences   UserPreference?
}

model Diversity {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int          @unique
  religion       Religion     @relation(fields: [religionId], references: [id])
  religionId     Int
  country        Country      @relation(fields: [countryId], references: [id])
  countryId      Int
  city           City         @relation(fields: [cityId], references: [id])
  cityId         Int
  community      Community    @relation(fields: [communityId], references: [id])
  communityId    Int
  motherTongue   MotherTongue @relation(fields: [motherTongueId], references: [id])
  motherTongueId Int
}

model AdditionalDetail {
  id                  Int        @id @default(autoincrement())
  userId              Int        @unique
  user                User       @relation(fields: [userId], references: [id])
  astrology        Astrology  @relation(fields: [astrologicalId], references: [id])
  astrologicalId      Int  @default(0)
  facebookProfileLink String
  contactNumber       String
}

model UserPreference {
  id                 Int                  @id @default(autoincrement())
  userId             Int                  @unique
  user               User                 @relation(fields: [userId], references: [id])
  gender             String
  minAge             Int
  maxAge             Int
  astrology       Astrology            @relation(fields: [astrologicalId], references: [id])
  astrologicalId     Int @default(0)
  maritalStatus      MaritalStatus        @relation(fields: [maritalStatusId], references: [id])
  maritalStatusId    Int
  preferredDiversity PreferredDiversity[]
}

model PreferredDiversity {
  id                Int            @id @default(autoincrement())
  userPreferencesId Int
  userPreference    UserPreference @relation(fields: [userPreferencesId], references: [id])
  country           Country        @relation(fields: [countryId], references: [id])
  countryId         Int
  city              City           @relation(fields: [cityId], references: [id])
  cityId            Int
  motherTongue      MotherTongue   @relation(fields: [motherTongueId], references: [id])
  motherTongueId    Int
  community         Community      @relation(fields: [communityId], references: [id])
  communityId       Int
  religion          Religion       @relation(fields: [religionId], references: [id])
  religionId        Int
}

model MaritalStatus {
  id             Int              @id @default(autoincrement())
  title          String           @unique
  users          User[]
  UserPreference UserPreference[]
}

model Religion {
  id                 Int                  @id @default(autoincrement())
  title              String               @unique
  Diversity          Diversity[]
  PreferredDiversity PreferredDiversity[]
}

model Country {
  id                 Int                  @id @default(autoincrement())
  title              String               @unique
  cities             City[]
  Diversity          Diversity[]
  PreferredDiversity PreferredDiversity[]
}

model City {
  id                 Int                  @id @default(autoincrement())
  title              String               @unique
  country            Country              @relation(fields: [countryId], references: [id])
  countryId          Int
  Diversity          Diversity[]
  PreferredDiversity PreferredDiversity[]
}

model Community {
  id                 Int                  @id @default(autoincrement())
  title              String               @unique
  Diversity          Diversity[]
  PreferredDiversity PreferredDiversity[]
}

model MotherTongue {
  id                 Int                  @id @default(autoincrement())
  title              String               @unique
  Diversity          Diversity[]
  PreferredDiversity PreferredDiversity[]
}

model Astrology {
  id               Int                @id @default(autoincrement())
  title            String             @unique
  AdditionalDetail AdditionalDetail[]
  UserPreference   UserPreference[]
}


